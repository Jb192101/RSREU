# Цель: создать программу, которая определяет значение функции, которое ближе всего к точке с координатами (x1; y1)
# Переменные:
# x0, xn - начальное и конечное значение x
# hx - шаг изменения
# xm, ym - значения точки (x, y), которая ближе всего к точке с координатами (x1, y1)
# y1, x1 - координаты произвольной точки
# distMin - минимальное расстояние между функции и произвольной точки
# dist - действующее расстояние между произвольной точкой и действующим значением функции
# Программист: Барышев Г.А.
# Дата написания: 10.10.2023
from math import sqrt

# Блок ввода
print("Введите исходные данные: ")
print("x0 = ", end = '')
x0 = float(input())
print("hx = ", end = '')
hx = float(input())
print("xn = ", end = '')
xn = float(input())
print("x1 = ", end = '')
x1 = float(input())
print("y1 = ", end = '')
y1 = float(input())

# Проверка ОДЗ
if(x0 > xn or hx <= 0):
    print("Неверно введённые данные!")
    exit()

print("Вы ввели: ")
print("x0 = %.2f  hx = %.2f  xn = %.2f x1 = %.2f y1 = %.2f" % (x0, hx, xn, x1, y1))
print("")

#Начальная таблица
print("┌" + "─" * 21 + "┬" + "─" * 27 + "┐")
print('│' + ' ' * 10 + 'x' + ' ' * 10 + '│' + ' ' * 13 + 'y' + ' ' * 13 + '│')
print('└' + '─' * 21 + '┴' + '─' * 27 + '┘')

x = x0
distMin = 1200
dist = 1199
xm = 0
ym = 0

# Табулирование функций
while(x < xn + hx/2):
    y = x**2 + 2*x - 3
    print("┌" + "─" * 21 + "┬" + "─" * 27 + "┐")
    print(f'│{round(x, 8):11}' + ' ' * 10 + f'│{round(y, 8):18}' + ' ' * 9 + '│')
    print('└' + '─' * 21 + '┴' + '─' * 27 + '┘')
    dist = sqrt((x - x1)**2 + (y - y1)**2)
    if(dist < distMin):
        distMin = dist
        xm = x
        ym = y
    x += hx

# Вывод значений
print("Наиболее близкое значение функции к точке с координатами (", x1, "; ", y1, ") имеет координаты (", xm, "; ", ym, ")")
